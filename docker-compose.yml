services:
  db:
    image: postgres:14-alpine
    container_name: nto-music-db
    environment:
      POSTGRES_DB: musicshop
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backend-net

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: nto-music-api:latest
    container_name: nto-music-api
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/musicshop
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    networks:
      - backend-net

  nginx:
    image: nginx:stable-alpine
    container_name: nto-music-nginx
    ports:
      - "80:80"
    depends_on:
      - api
    volumes:
      - ./frontend/dist:/usr/share/nginx/html:ro
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - backend-net

volumes:
  db-data:

networks:
  backend-net:
    driver: bridge
